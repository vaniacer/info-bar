#!/bin/bash

case $1 in '-remove' | '-r') sed '/[oOº]_[oOº]/d' -i ~/.bashrc; exit 0;; esac

cat >> ~/.bashrc << 'EOF'

#---------------------------------------------{ Info bar }----------------------------------------------+ o_o
faces=(O_o o_O o_o O_O º_o º_O O_º o_º º_º); facesN=${#faces[@]} # Face types                         # | o_º
declare -A paint=(  #________                                                                         # | O_O
   [green]='\e[32m' #                                                                                 # | o_o
   [yelow]='\e[33m' # colors                                                                          # | O_o
    [blue]='\e[94m' #________                                                                         # | º_O
    [norm]='\e[0m'  #                                                                                 # | o_o
    [bold]='\e[1m'  # effects                                                                         # | O_o
     [dim]='\e[2m') #________                                                                         # | o_º
                                                                                                      # | º_O
face() { printf "${paint[yelow]}${faces[$((RANDOM % $facesN))]}${paint[norm]}"; } # Random face       # | º_º
info() {                                                                                              # | o_º
    [[ -d .git ]] && {                                                                                # | O_o
        git_clr=('GIT' $(git -c color.ui=always status -sb))              # Colored output 4 info     # | o_O
        git_tst=('GIT' $(git status -sb))                                 # Simple  output 4 test     # | o_o
    }                                                                                                 # | o_º
    D=$(printf "%(%a %d %b %T)T")                                         # Date & time               # | O_o
    T=" O_o $PWD  ${git_tst[*]} $D o_O "                                  # Test string               # | o_o
    S=$[$COLUMNS-${#T}]; [[ $S -lt 0 ]] && S=0                            # Count spaces              # | o_º
    date="${paint[dim]}$D${paint[norm]}"                                  # Date & time               # | O_o
    home="${paint[bold]}${paint[blue]}$PWD${paint[norm]}"                 # Home dir info             # | o_o
    line="${paint[green]}$(printf %.s- `seq $COLUMNS`)${paint[norm]}\n"   # Create lines              # | O_O
           #------+-----+-------+------+------------+-----+-------+--------+                          # | o_o
           # Line | O_o |homedir|Spaces| Git status | Date|  o_O  |  Line  |                          # | o_O
           #------+-----+-------+------+------------+-----+-------+--------+                          # | O_O
    printf "$line $(face) $home %${S}s ${git_clr[*]} $date $(face) \n$line"                           # | O_o
}                                                                                                     # | O_o
                                                                                                      # | o_o
PS1='${debian_chroot:+($debian_chroot)}\n$(info)\n$ '                                                 # | º_O
                                                                                                      # | o_º
case "$TERM" in xterm*|rxvt*)                                                                         # | O_o
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)} ${faces[$((RANDOM % ${#faces[@]}))]} \w\a\]$PS1";; # | O_º
esac                                                                                                  # | o_O
#-------------------------------------------------------------------------------------------------------+ O_o
EOF
